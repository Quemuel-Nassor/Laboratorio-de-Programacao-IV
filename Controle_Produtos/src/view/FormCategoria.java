package view;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import controller.CategoriaDAO;
import controller.ProdutoDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Categoria;
import model.Produto;

/**
 *
 * @author quemu
 */
public class FormCategoria extends javax.swing.JFrame {

    /**
     * Creates new form FormCategoria
     */
    public FormCategoria() {
        initComponents();
        configurarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNomeCategoria = new javax.swing.JLabel();
        txtNomeCategoria = new javax.swing.JTextField();
        btnEditarCategoria = new javax.swing.JToggleButton();
        btnNovoCategoria = new javax.swing.JToggleButton();
        btnSalvarCategoria = new javax.swing.JToggleButton();
        btnCancelarCategoria = new javax.swing.JToggleButton();
        btnExcluirCategoria = new javax.swing.JToggleButton();
        lblPesquisarCategoria = new javax.swing.JLabel();
        rdbIdCategoria = new javax.swing.JRadioButton();
        rdbNomeCategoria = new javax.swing.JRadioButton();
        txtPesquisarCategoria = new javax.swing.JTextField();
        jScrollBar1 = new javax.swing.JScrollPane();
        tbCategorias = new javax.swing.JTable();
        lblIdCategoria = new javax.swing.JLabel();
        txtIdCategoria = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNomeCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNomeCategoria.setText("Nome da categoria");

        txtNomeCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnEditarCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditarCategoria.setText("editar");

        btnNovoCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNovoCategoria.setText("novo");
        btnNovoCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCategoriaActionPerformed(evt);
            }
        });

        btnSalvarCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalvarCategoria.setText("salvar");
        btnSalvarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCategoriaActionPerformed(evt);
            }
        });

        btnCancelarCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelarCategoria.setText("cancelar");
        btnCancelarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCategoriaActionPerformed(evt);
            }
        });

        btnExcluirCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExcluirCategoria.setText("excluir");
        btnExcluirCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCategoriaActionPerformed(evt);
            }
        });

        lblPesquisarCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPesquisarCategoria.setText("Pesquisar");

        rdbIdCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbIdCategoria.setText("id");

        rdbNomeCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbNomeCategoria.setText("nome");

        txtPesquisarCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPesquisarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarCategoriaActionPerformed(evt);
            }
        });
        txtPesquisarCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCategoriaKeyReleased(evt);
            }
        });

        tbCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoriasMouseClicked(evt);
            }
        });
        jScrollBar1.setViewportView(tbCategorias);

        lblIdCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblIdCategoria.setText("Id da categoria");

        txtIdCategoria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdbIdCategoria)
                        .addGap(18, 18, 18)
                        .addComponent(rdbNomeCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisarCategoria))
                    .addComponent(lblPesquisarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvarCategoria)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollBar1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNomeCategoria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNomeCategoria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblIdCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIdCategoria))))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCategoria)
                    .addComponent(lblIdCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarCategoria)
                    .addComponent(btnSalvarCategoria)
                    .addComponent(btnCancelarCategoria)
                    .addComponent(btnNovoCategoria)
                    .addComponent(btnExcluirCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPesquisarCategoria)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbIdCategoria)
                    .addComponent(rdbNomeCategoria)
                    .addComponent(txtPesquisarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarCategoriaActionPerformed

    private void txtPesquisarCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCategoriaKeyReleased

//        String chave = txtPesquisarCategoria.getText();
//        List<Categoria> resultado = null;
//
//        if(chave.isEmpty()){
//            resultado = new CategoriaDAO().listar();
//        }else{
//            if(rdbNomeCategoria.isSelected()){
//                resultado = new CategoriaDAO().pesquisarPorNome(chave);
//            }else if(rdbIdCategoria.isSelected()){
//                resultado = new CategoriaDAO().pesquisarPorId(Integer.parseInt(chave));
//            }
//        }
//        
//        if(resultado != null){
//            preencherTabela(resultado);
//        }

    }//GEN-LAST:event_txtPesquisarCategoriaKeyReleased

    private void tbCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoriasMouseClicked
        
        preencherFormulario(0);
        btnExcluirCategoria.setEnabled(true);

    }//GEN-LAST:event_tbCategoriasMouseClicked

    private void btnNovoCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCategoriaActionPerformed
        
        txtIdCategoria.setEnabled(false);
        txtNomeCategoria.setEnabled(true);
        btnSalvarCategoria.setEnabled(true);
        txtPesquisarCategoria.setEnabled(false);
        btnNovoCategoria.setEnabled(true);
        btnEditarCategoria.setEnabled(false);
        btnExcluirCategoria.setEnabled(false);
        btnCancelarCategoria.setEnabled(true);
        txtIdCategoria.setText("");
        txtNomeCategoria.setText("");
        txtNomeCategoria.requestFocus();
    }//GEN-LAST:event_btnNovoCategoriaActionPerformed

    private void btnCancelarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCategoriaActionPerformed
        
        txtIdCategoria.setEnabled(false);
        txtNomeCategoria.setEnabled(true);
        btnSalvarCategoria.setEnabled(true);
        txtPesquisarCategoria.setEnabled(true);
        btnNovoCategoria.setEnabled(true);
        btnEditarCategoria.setEnabled(true);
        btnExcluirCategoria.setEnabled(true);
        btnCancelarCategoria.setEnabled(true);
        preencherFormulario(0);
    }//GEN-LAST:event_btnCancelarCategoriaActionPerformed

    private void btnSalvarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCategoriaActionPerformed
        
        //criar um objeto para parametrizar a operação
        Categoria c  = new Categoria();
        
        //recuperar o nome da categoria
        c.setNome(txtNomeCategoria.getText());
        
        int id = -1;
            if(txtIdCategoria.getText().isEmpty()){
                //inserir o registro na tabela
//                id = new CategoriaDAO().inserir(c);
            }else{
//                //atualizar o registro tabela
//                c.setId(Integer.parseInt(txtIdCategoria.getText()));
//                id = new CategoriaDAO().atualizar(c);
            }
        
        if(id != -1){
            txtIdCategoria.setText(Integer.toString(id));
            preencherTabela(new CategoriaDAO().listar());
            
            txtIdCategoria.setText("");
            txtNomeCategoria.setText("");
            
            JOptionPane.showMessageDialog(null,"Operação realizada com sucesso");
        }else{
            JOptionPane.showMessageDialog(null,"Não foi possível realizar a operação");
        }
    }//GEN-LAST:event_btnSalvarCategoriaActionPerformed

    private void btnExcluirCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCategoriaActionPerformed
        if(txtIdCategoria.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Selecione um registro para excluir.");
            
        }else{
            
            int resp = JOptionPane.showConfirmDialog(null,"Tem certeza de que deseja apagar o registro?","Controle Produtos",JOptionPane.YES_NO_OPTION);
            Categoria c  = new Categoria();
            
            //recuperando informações do objeto
            c.setNome(txtNomeCategoria.getText());
//            c.setId(Integer.parseInt(txtIdCategoria.getText()));
            
            if (resp == JOptionPane.YES_OPTION){
                //remover o registro tabela
//                int remover = new CategoriaDAO().remover(c);
            }
            
            JOptionPane.showMessageDialog(null,"Excluído id: "+Integer.parseInt(tbCategorias.getValueAt(tbCategorias.getSelectedRow(),0).toString()));
            
            preencherFormulario(1);
            preencherTabela(new CategoriaDAO().listar());
            
        }
    }//GEN-LAST:event_btnExcluirCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCategoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelarCategoria;
    private javax.swing.JToggleButton btnEditarCategoria;
    private javax.swing.JToggleButton btnExcluirCategoria;
    private javax.swing.JToggleButton btnNovoCategoria;
    private javax.swing.JToggleButton btnSalvarCategoria;
    private javax.swing.JScrollPane jScrollBar1;
    private javax.swing.JLabel lblIdCategoria;
    private javax.swing.JLabel lblNomeCategoria;
    private javax.swing.JLabel lblPesquisarCategoria;
    private javax.swing.JRadioButton rdbIdCategoria;
    private javax.swing.JRadioButton rdbNomeCategoria;
    private javax.swing.JTable tbCategorias;
    private javax.swing.JTextField txtIdCategoria;
    private javax.swing.JTextField txtNomeCategoria;
    private javax.swing.JTextField txtPesquisarCategoria;
    // End of variables declaration//GEN-END:variables

    private void configurarTabela(){
        DefaultTableModel m = new DefaultTableModel(
            new Object[]{"Id","Nome"}, 0){
          
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tbCategorias.setModel(m);
    }
    
    private void preencherTabela(List<Categoria> lista){
        if(lista != null){
            if(lista.size()>0){
                configurarTabela();
                DefaultTableModel m = (DefaultTableModel)tbCategorias.getModel();
                for(Categoria c : lista){
                    m.addRow(new Object[]{
                        c.getId(),
                        c.getNome(),
                    });
                }
                tbCategorias.setModel(m);
            }
        }
        
    }
    
    private void preencherFormulario(int count){
        
        int linha = tbCategorias.getSelectedRow();
        
        //se count > 0 linha += 1
        linha += count > 0 ? 1 : 0;
        
        if(linha >= tbCategorias.getRowCount()){
            linha = 0;
        }
        
        if(linha >= 0){
            
            txtIdCategoria.setText(tbCategorias.getValueAt(linha,0).toString());
            txtNomeCategoria.setText(tbCategorias.getValueAt(linha,1).toString());
            
        }
    }
    
    private void configurarFormulario(){
        
        preencherTabela(new CategoriaDAO().listar());
        txtIdCategoria.setEnabled(false);
        txtNomeCategoria.setEnabled(true);
        btnSalvarCategoria.setEnabled(true);
        txtPesquisarCategoria.setEnabled(true);
        btnNovoCategoria.setEnabled(true);
        btnEditarCategoria.setEnabled(true);
        btnExcluirCategoria.setEnabled(false);
        btnCancelarCategoria.setEnabled(true);
        
    }
}
